analyzer:
  kafka:
    config:
      sensor-snapshots-topic: telemetry.snapshots.v1
      bootstrap-servers: localhost:9092
      hub-events-topic: telemetry.hubs.v1
      snapshot-consumer:
        attempt-timeout: '500'
        group-id: snapshot-analyzer-group
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        client-id: snapshot-consumer-1
        value-deserializer: ru.yandex.practicum.avro.SensorSnapshotDeserializer
        auto-commit: false
      hub-consumer:
        attempt-timeout: '2000'
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        client-id: hub-consumer-1
        value-deserializer: ru.yandex.practicum.avro.HubEventDeserializer
        group-id: hub-analyzer-group
        auto-commit: false
spring:
  datasource:
    driverClassName: "org.postgresql.Driver"
    password: "analyzer"
    username: "analyzer"
    url: "jdbc:postgresql://localhost:5433/analyzer"
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: "true"
    show-sql: "true"
  sql:
    init:
      mode: always
  output:
    ansi:
      enabled: ALWAYS
grpc:
  client:
    hub-router:
      enableKeepAlive: 'true'
      address: static://localhost:59090
      keepAliveWithoutCalls: 'true'
      negotiationType: plaintext
logging:
  level:
    org:
      hibernate:
        orm:
          jdbc:
            bind: trace
        SQL: DEBUG
      springframework:
        transaction:
          interceptor: TRACE
          nodeValue: INFO
        orm:
          jpa:
            JpaTransactionManager: DEBUG
            nodeValue: INFO